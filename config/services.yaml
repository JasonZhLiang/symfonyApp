# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    cache_adapter: 'cache.adapter.apcu'     #you can invent any keys you want
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
#        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        bind:               # this is a cooler way than the bottom 4 lines code. this means if you find any argument named $markdownLogger, pass this service to it.
            $markdownLogger: '@monolog.logger.markdown'    #because we added it to _default, it applies to all our services. Instead of configuring our services one-by-one in project-wide
#            $isDebug: true
            $isDebug: '%kernel.debug%'

#by unindent it at the root of services, it will affect all services in the system. then you can find it debug:autowiring, if beneath bind, will not show
    Nexy\Slack\Client: '@nexy_slack.client'  #you can bind by the argument name or you can bind by a class or interface


    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

#    App\Service\MarkdownHelper:
#        autowire: false  #you can set this value to false by add this to override the _default value.
#        arguments:
#            $logger: '@monolog.logger.markdown'